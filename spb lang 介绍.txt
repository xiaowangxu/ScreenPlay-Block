<> Project.Info.Title:SPB Lang 介绍
   Project.Info.Author:studio UNNAMED
   Project.Info.Phone:15221195946
   Project.Info.Email:2208740924@qq.com

<> Flow.Switch.Define:Version.1
<> Flow.Switch:Version.1

/* SPB Lang 介绍
// SPB Lang 是一种由王徐设计的剧本编写标签语言
   “标签”是指在每行开头有由相连的两个特殊符号组成的标签--其表示标签后内容的属性

// 如“##”标签：
## 场景 表示的就是场景内容

// “@@”标签：
@@ 动作行为

// “==”标签：
== 角色

// “++”标签：
++ 对话或形容

// “~~”标签：
~~ 转场

// “//”标签：
// 就是您一直在看的注释文本

// “/*”标签：
/* 纯文本

// ------------------------------------------------------------------------------------------------------------
// 下面我们将详细地介绍SPB Lang的语法和特性

// ------------------------------------------------------------------------------------------------------------
== 标签格式与内容
// ------------------------------------------------------------------------------------------------------------

// 标签必须出现在每行的开头
   “test## 测试内容”
   这样的标签是无效的

// 在标签后的内容将自动去除开头的空格
   “##          测试内容”将显示为
##          测试内容
// 而非“          测试内容”

// 标签后的换行将自动被忽略：
// ++ 1
   
   2
   3
   将输出为:
++ 1

   2
   3

// 同时上述的空格忽略和换行忽略是叠加的
// ++ 1
   
   “   ”2     “”内为空格
   3
   将输出为
++ 1

      2
   3

// ------------------------------------------------------------------------------------------------------------
== 自动标签转换
// ------------------------------------------------------------------------------------------------------------

// 在剧作中有些元素只可能占一行
   因此SPB Lang提供一些快捷的省力的语法
// 如“##”标签行的下一行若不含标签
   
// ## 场景
   1234
   5678
   
// 则这一行将自动被认定为“@@”标签行：
## 场景
   1234
5678

// 类似的
// ## 后跟 @@
// ~~ 后跟 ##
// == 后跟 ++
   
// ~~ Transition
       Scene
       Action
// == Character
      Dialogue
      显示为：

~~ Transition
   Scene
   Action
== Character
   Dialogue

// ------------------------------------------------------------------------------------------------------------
== 多行元素与多行内容
// ------------------------------------------------------------------------------------------------------------

// 上面说完了单行元素，下面介绍多行元素
   “@@” “++” “//” “/*” 均是多行元素
   即它们的未加标签的下一行将被认定为是这一元素的多行内容
// 如：
   
// @@ Action1
   Action2
   
   将显示为：
@@ Action1
   Action2

// 但如果在下一行存在标签，即使该标签与上一行标签相同，它们也会被认定为标签相同的不同元素
// 如：
// @@ Action1
// @@ Action2
   将显示为：

@@ Action1
@@ Action2

// ------------------------------------------------------------------------------------------------------------
== 元素内部表达式
// ------------------------------------------------------------------------------------------------------------

// 在SPB Lang中内建了一些样式赋予语句
   如下方的两个"=="元素：
== 默认样式
== 赋予了样式|Red

// 支持样式赋予的元素有：== Character ~~ Transition

// 在“==”元素中
   样式赋予表达式的格式为：
   内容|颜色

// 样式赋予格式1|Red
== 样式赋予格式1|Red
// 样式赋予格式2|  RED
== 样式赋予格式2|  RED
// 样式赋予格式3|  0,0,255
== 样式赋予格式3|  0,0,255
// 样式赋予格式4|reset
== 样式赋予格式4|reset

// 同时对于“==”元素
   当内容相同时格式将被认定为与其最近的一次样式赋予相同的的样式

// 样式赋予格式0
== 样式赋予格式0
// 样式赋予格式0|Red
== 样式赋予格式0|Red
// 样式赋予格式0
== 样式赋予格式0
// 样式赋予格式0|Green
== 样式赋予格式0|Green
// 样式赋予格式0
== 样式赋予格式0

// 相似的“~~”元素的样式格式为
   内容|in or out
   但样式只对该元素有效：
// CUT FROM : |in
~~ CUT FROM : |in
// CUT TO : | OUT
~~ CUT TO : | OUT

<> Flow.Close

// 以上就是SPB Lang的基本特性
   studio UNNAMED 2019 v0.0.2